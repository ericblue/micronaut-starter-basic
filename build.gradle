plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.0"
    id("com.google.cloud.tools.jib") version "2.8.0"
    id("org.openrewrite.rewrite") version "5.12.0"
    id("io.micronaut.aot") version "4.2.0"
    id("io.micronaut.docker") version "4.2.0"
}

version = "0.1"
group = "com.ericblue.micronaut.starter"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.micrometer:micronaut-micrometer-annotation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.session:micronaut-session")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("io.micronaut.views:micronaut-views-handlebars")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.validation:jakarta.validation-api")

    compileOnly("org.projectlombok:lombok")

    runtimeOnly("org.yaml:snakeyaml")
    runtimeOnly("ch.qos.logback:logback-classic")
    rewrite("org.openrewrite.recipe:rewrite-micronaut:1.15.1")
}


application {
    mainClass.set("com.ericblue.micronaut.starter.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


tasks {
    jib {
        to {
            image = "gcr.io/myapp/jib-image"
        }
    }
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.ericblue.micronaut.starter.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

tasks.named("dockerBuild") {
    images = ["ericblue/micronaut-starter-basic:$project.version"]
}

tasks.named("dockerBuildNative") {
    images = ["ericblue/micronaut-starter-basic-native:$project.version"]
}

rewrite {
    activeRecipe("org.openrewrite.java.micronaut.Micronaut2to3Migration")
}

run.doFirst {
    if (project.file('.env').exists()) {
        file('.env').readLines().each() {
            if (!it.isEmpty() && !it.startsWith("#")) {
                def (key, value) = it.tokenize('=')
                if (System.getenv(key) == null) {
                    println "Setting environment variable for ${key}"
                    environment key, value
                }
            }
        }
    } else {
        println "No custom environment variables set"
    }
}

